From de47cbef7b3f6c2a537fbb071eeca6c7722f8c6e Mon Sep 17 00:00:00 2001
From: Jehan <jehan@girinstud.io>
Date: Sat, 5 May 2018 03:01:44 +0200
Subject: [PATCH 1/2] Bug 795635 - crash from unplugging the tablet while GIMP
 was running.

Similar to older bug 575767.
This workaround is still as ugly as ever. Yet anyway it is still better
to ignore errors than to crash.
---
 gdk/x11/gdkevents-x11.c  | 15 ++++++++++++++-
 gdk/x11/gdkinput-xfree.c |  9 +++++++++
 2 files changed, 23 insertions(+), 1 deletion(-)

diff --git a/gdk/x11/gdkevents-x11.c b/gdk/x11/gdkevents-x11.c
index 360b0c7930..f1dbab45c5 100644
--- a/gdk/x11/gdkevents-x11.c
+++ b/gdk/x11/gdkevents-x11.c
@@ -137,6 +137,12 @@ static GSourceFuncs event_funcs = {
   NULL
 };
 
+static int
+ignore_errors (Display *display, XErrorEvent *event)
+{
+  return True;
+}
+
 static GSource *
 gdk_display_source_new (GdkDisplay *display)
 {
@@ -156,7 +162,14 @@ gdk_display_source_new (GdkDisplay *display)
 static gboolean
 gdk_check_xpending (GdkDisplay *display)
 {
-  return XPending (GDK_DISPLAY_XDISPLAY (display));
+  gboolean pending;
+  int (*old_handler) (Display *, XErrorEvent *);
+
+  old_handler = XSetErrorHandler (ignore_errors);
+  pending = XPending (GDK_DISPLAY_XDISPLAY (display));
+  XSetErrorHandler (old_handler);
+
+  return pending;
 }
 
 /*********************************************
diff --git a/gdk/x11/gdkinput-xfree.c b/gdk/x11/gdkinput-xfree.c
index 566a0c0f7a..9d40cf33e6 100644
--- a/gdk/x11/gdkinput-xfree.c
+++ b/gdk/x11/gdkinput-xfree.c
@@ -341,6 +341,7 @@ _gdk_input_grab_pointer (GdkWindow      *window,
   gint num_classes;
   gint result;
   GdkDisplayX11 *display_impl  = GDK_DISPLAY_X11 (GDK_WINDOW_DISPLAY (window));
+  int (*old_handler) (Display *, XErrorEvent *);
 
   tmp_list = display_impl->input_windows;
   need_ungrab = FALSE;
@@ -379,10 +380,12 @@ _gdk_input_grab_pointer (GdkWindow      *window,
 		result = GrabSuccess;
 	      else
 #endif
+		old_handler = XSetErrorHandler (ignore_errors);
 		result = XGrabDevice (display_impl->xdisplay, gdkdev->xdevice,
 				      GDK_WINDOW_XWINDOW (native_window),
 				      owner_events, num_classes, event_classes,
 				      GrabModeAsync, GrabModeAsync, time);
+		XSetErrorHandler (old_handler);
 
 	      /* FIXME: if failure occurs on something other than the first
 		 device, things will be badly inconsistent */
@@ -401,7 +404,9 @@ _gdk_input_grab_pointer (GdkWindow      *window,
 	  if (!GDK_IS_CORE (gdkdev) && gdkdev->xdevice &&
 	      ((gdkdev->button_count != 0) || need_ungrab))
 	    {
+	      old_handler = XSetErrorHandler (ignore_errors);
 	      XUngrabDevice (display_impl->xdisplay, gdkdev->xdevice, time);
+	      XSetErrorHandler (old_handler);
 	      memset (gdkdev->button_state, 0, sizeof (gdkdev->button_state));
 	      gdkdev->button_count = 0;
 	    }
@@ -433,6 +438,9 @@ _gdk_input_ungrab_pointer (GdkDisplay *display,
 
   if (tmp_list)			/* we found a grabbed window */
     {
+      int (*old_handler) (Display *, XErrorEvent *);
+
+      old_handler = XSetErrorHandler (ignore_errors);
       input_window->grabbed = FALSE;
 
       tmp_list = display_impl->input_devices;
@@ -444,6 +452,7 @@ _gdk_input_ungrab_pointer (GdkDisplay *display,
 
 	  tmp_list = tmp_list->next;
 	}
+      XSetErrorHandler (old_handler);
     }
 }
 
-- 
2.14.3


From 4fc428ffa71556ee15faf7d7b31384612a0c2907 Mon Sep 17 00:00:00 2001
From: Jehan <jehan@girinstud.io>
Date: Sat, 5 May 2018 13:23:01 +0200
Subject: [PATCH 2/2] Bug 795635 - crash from unplugging the tablet while GIMP
 was running.

When grabbing of a device fails, ungrab all previously grabbed device in
the loop before failing the call. Otherwise we end up in inconsistent
state.
---
 gdk/x11/gdkinput-xfree.c | 24 ++++++++++++++++--------
 1 file changed, 16 insertions(+), 8 deletions(-)

diff --git a/gdk/x11/gdkinput-xfree.c b/gdk/x11/gdkinput-xfree.c
index 9d40cf33e6..fa83c623d3 100644
--- a/gdk/x11/gdkinput-xfree.c
+++ b/gdk/x11/gdkinput-xfree.c
@@ -339,7 +339,7 @@ _gdk_input_grab_pointer (GdkWindow      *window,
   GList *tmp_list;
   XEventClass event_classes[GDK_MAX_DEVICE_CLASSES];
   gint num_classes;
-  gint result;
+  gint result = Success;
   GdkDisplayX11 *display_impl  = GDK_DISPLAY_X11 (GDK_WINDOW_DISPLAY (window));
   int (*old_handler) (Display *, XErrorEvent *);
 
@@ -387,17 +387,22 @@ _gdk_input_grab_pointer (GdkWindow      *window,
 				      GrabModeAsync, GrabModeAsync, time);
 		XSetErrorHandler (old_handler);
 
-	      /* FIXME: if failure occurs on something other than the first
-		 device, things will be badly inconsistent */
+	      /* if failure occurs on something other than the first
+	      * device, things will be badly inconsistent.
+	      * Break the loop and ungrab all previously grabbed devices.
+	      */
 	      if (result != Success)
-		return result;
+	        break;
 	    }
 	  tmp_list = tmp_list->next;
 	}
     }
-  else
+  if (! priv->extension_events || result != Success)
     {
-      tmp_list = display_impl->input_devices;
+      if (! priv->extension_events)
+        tmp_list = display_impl->input_devices;
+      else
+        tmp_list = tmp_list->prev;
       while (tmp_list)
 	{
 	  gdkdev = (GdkDevicePrivate *)tmp_list->data;
@@ -411,11 +416,14 @@ _gdk_input_grab_pointer (GdkWindow      *window,
 	      gdkdev->button_count = 0;
 	    }
 
-	  tmp_list = tmp_list->next;
+	  if (! priv->extension_events)
+	    tmp_list = tmp_list->next;
+	  else
+	    tmp_list = tmp_list->prev;
 	}
     }
 
-  return Success;
+  return result;
 }
 
 void
-- 
2.14.3

